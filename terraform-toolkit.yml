---
variables:
  DOCKER_DRIVER: "overlay2"
  DOCKER_TLS_CERTDIR: "/certs"

.job_template: &job_template
  before_script:
    - terraform --version
  tags:
    - docker
    - miquido
  cache:
    paths:
      - "**/.terraform"

.get-latest-terraform:
  stage: .pre
  tags:
    - docker
    - miquido
  before_script:
    - apk add jq
    - apk add curl
  script:
    - |
      if [ -z ${GITHUB_TOKEN+x} ];
        then
          echo "GITHUB_TOKEN is unset";
          echo "TF_VERSION=1.0.0" >> build.env
        else
          TF_VERSION=$(curl https://api.github.com/repos/hashicorp/terraform/releases/latest \
                  | jq --raw-output '.tag_name' | cut -c 2-)
        echo "Latest terraform version = $TF_VERSION"
        echo "TF_VERSION=$TF_VERSION" >> build.env
      fi
  artifacts:
    reports:
      dotenv: build.env

.check-formatting:
  <<: *job_template
  image:
    name: miquidocompany/terraform:$TF_VERSION
    entrypoint:
      - "/usr/bin/env"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  variables:
    TF_VERSION: 1.0.0
  script:
    - terraform fmt -check -recursive

.validate:
  <<: *job_template
  variables:
    ENVIRONMENTS: prod
    TF_VERSION: 1.0.0
  image:
    name: miquidocompany/terraform:$TF_VERSION
    entrypoint:
      - "/usr/bin/env"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  script:
    # yamllint disable rule:line-length
    - |
      IFS=' ' #setting space as delimiter
      read -ra ENVIRONMENTS <<<"$ENVIRONMENTS"
      for ENVIRONMENT in "${ENVIRONMENTS[@]}"
      do
        cd "$ENVIRONMENT"
        git config --global \url."https://${GITLAB_TERRAFORM_DEPLOY_TOKEN_USERNAME}:${GITLAB_TERRAFORM_DEPLOY_TOKEN_SECRET}@gitlab.com/miquido/terraform".insteadOf "ssh://git@gitlab.com/miquido/terraform"
        git config --global url."https://github.com".insteadOf "ssh://git@github.com"
        terraform init -backend=false
        terraform validate
        cd -
      done
    # yamllint enable rule:line-length
