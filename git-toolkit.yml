---
.bump_minor_tag:
  tags:
    - docker
    - miquido
  stage: .post
  image: frolvlad/alpine-bash
  variables:
    GITLAB_TOKEN: "<ENTER_VAR>"
  before_script:
    - apk add git
  script:
    - TXT_RED="\e[31m"
    - |
      if [ "$GITLAB_TOKEN" = "<ENTER_VAR>" ]; then
        echo -e "${TXT_RED}Fatal: Missing GITLAB_TOKEN. \
      Please setup GITLAB_TOKEN variable with token with write_repository rights"
        exit 1
      fi
    - git tag -l | xargs git tag -d
    - git fetch origin 'refs/tags/*:refs/tags/*'
    - VERSION=$(git tag --sort=committerdate | { grep "[0-9]*.[0-9]*.[0-9]*$" || true; }| tail -1)
    - git remote rm $CI_PIPELINE_ID &> /dev/null || true;
    - |
      git remote add $CI_PIPELINE_ID \
      https://token:$GITLAB_TOKEN@gitlab.com/$CI_PROJECT_PATH.git
    - |
      if [[ "$VERSION" == "" ]]; then
        echo "VERSION is unset"
        VERSION="1.0.0"
      else
        echo "VERSION is set to '$VERSION'"
        VERSION=$(echo "$VERSION" | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
      fi
    - git tag "$VERSION"
    - git push $CI_PIPELINE_ID $VERSION
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

.simple_changelog:
  script:
    - apk add git
    - git log --pretty=format:%s%n%b%n------%n $CI_COMMIT_BEFORE_SHA.. > changelog.txt
  tags:
    - miquido
    - docker
  artifacts:
    paths:
      - changelog.txt
    expire_in: 1 week

.changelog:
  variables:
    CHANGELOG_FILE: "CHANGELOG.md"
    TAG_QUERY: ""
  image: miquido/miquido-chglog:1.0.4
  script:
    - /chglog/latest-tag.sh $TAG_QUERY > $CHANGELOG_FILE
  tags:
    - miquido
    - docker
  rules:
    - if: $CI_COMMIT_TAG
  artifacts:
    expire_in: "1 week"
    paths:
      - $CHANGELOG_FILE

.push-changelog:
  stage: .post
  image: frolvlad/alpine-bash
  script:
    - apk add git
    - TXT_RED="\e[31m"
    - |
      if [ "$GITLAB_TOKEN" = "<ENTER_VAR>" ]; then
        echo -e "${TXT_RED}Fatal: Missing GITLAB_TOKEN. \
      Please setup GITLAB_TOKEN variable with token with write_repository rights"
        exit 1
      fi
    - git remote set-url origin https://token:$GITLAB_TOKEN@gitlab.com/$CI_PROJECT_PATH.git
    - git config --global user.name "Changelog-bot"
    - git config --global user.email "Changelog-bot@miquido.com"
    - git stash
    - git fetch
    - git checkout $CI_DEFAULT_BRANCH
    - git pull -s recursive -X ours --ff-only
    - git stash apply || true
    - git add CHANGELOG.md
    - |
      git commit -m "chore(changelog): Changelog $CI_COMMIT_TAG [skip-ci]"
      git push
  tags:
    - miquido
    - docker
  rules:
    - if: $CI_COMMIT_TAG

.push_readme:
  stage: .post
  image: frolvlad/alpine-bash
  script:
    - apk add git
    - TXT_RED="\e[31m"
    - |
      if [ "$GITLAB_TOKEN" = "<ENTER_VAR>" ]; then
        echo -e "${TXT_RED}Fatal: Missing GITLAB_TOKEN. \
      Please setup GITLAB_TOKEN variable with token with write_repository rights"
        exit 1
      fi
    - git remote set-url origin https://token:$GITLAB_TOKEN@gitlab.com/$CI_PROJECT_PATH.git
    - git config --global user.name "bot"
    - git config --global user.email "bot@miquido.com"
    - git stash
    - git fetch
    - git checkout $CI_COMMIT_BRANCH --
    - git pull -s recursive -X ours --ff-only
    - git stash apply || true
    - git add README.md
    - |
      git commit -m "chore(readme) [skip-ci]" || true
      git push
  tags:
    - miquido
    - docker
  rules:
    - if: $CI_COMMIT_BRANCH
